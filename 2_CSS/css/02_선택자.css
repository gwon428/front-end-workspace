/* 1. 전체선택자 */
* {
  color: blue;
}

/* 2. 태그선택자 */
h3 {
  background-color: yellow;
}
p {
}

/* 3. 클래스선택자 */
.class1 {
  color: yellowgreen;
}

.class2 {
  font-size: 30px;
}

/* 4. 아이디선택자 */
#id1 {
  color: orange;
}

/* 5. 그룹선택자 */
#select1,
#select2 {
  background: orangered;
}

/* 6. 자식선택자와 자손선택자 */
#test1 > * {
  background: pink;
}

/* test 밑에 있는 li를 전부 선택한다는 뜻 */
#test1 li {
  color: red;
}

#test1 > ul > li {
  background: darkcyan;
}

/* 7. 속성 선택자 */
/* div 요소들 중 name 속성값이 name1과 "일치"하는 요소 */
div[name="name1"] {
  background: orange;
}

/* div 요소들 중 name 속성값에서 name1을 "포함"하는 요소 */
div[name~="name1"] {
  background: yellow;
}

/* div 요소들 중 class 속성값에 -c를 "포함"되어있는 요소*/
div[class*="-c"] {
  color: red;
}

/* div 요소들 중 name 속성값이 na로 "시작"하는 요소 */
div[name^="na"] {
  background: blue;
}

/* div 요소들 중 class 속성값이 class로 "시작"하는 요소 */
div[class|="class"] {
  background: cyan;
}

/* div 요소들 중 class 속성값이 ss로 "끝"나는 요소 */
div[class$="ss"] {
  color: white;
}

/* 8. 형제 선택자 */
/* a + b : a 요소 뒤에 있는 b 요소 "하나만" 선택 */
/* + : 선택한 것의 바로 뒤 하나만. */
#test2 + div {
  background: yellow;
}

#test2 + p {
  background: pink;
  /* 작동 x => 바로 뒤에 있는 요소가 아니기 때문 */
}

/* ~ : 선택한 것의 뒤 모두!! 선택 */
/* a ~ b : a 요소 뒤에 "모든" b 요소 선택 */

#test2 ~ div {
  background: beige;
}

#test2 ~ p {
  background: none; /*형제들은 선택 가능하기 때문에 그 중 p인 것만 선택*/
}

/* 9. 반응 선택자 */
.area {
  background: yellowgreen;
  width: 100px;
  height: 100px;
  cursor: pointer;
}

/* :active : 사용자가 클릭하는 요소 */
#active-test:active {
  background: yellow;
  color: red;
}

/* :hover : 사용자가 마우스를 올려놓은 요소 */
#hover-test:hover {
  background: maroon;
  color: white;
}
/* 기존 선택자에 잠시 적용하는 요소? */
input[name^="user"]:focus {
  background: pink;
}

/* 10. 상태 선택자 */
input[type="checkbox"]:checked {
  width: 20px;
  height: 20px;
}

input[type="checkbox"]:checked + label {
  font-size: 20px;
}

button:disabled {
  background: yellowgreen;
}

button:enabled {
  background: violet;
}

/* 11. 구조 선택자 */
/* 첫번째 요소 */
#test3 li:first-child {
  background: salmon;
}

/* 해당 유형 중 첫번째 요소 */
#test3 p:first-of-type {
  background: red;
}

/* 마지막 요소 */
#test3 li:last-child {
  background: skyblue;
}

/* 해당 유형 중 마지막 요소 */
#test3 li:last-of-type {
  background: brown;
}

/* n번째 요소 */
/* 숫자가 태그와는 상관없음. => 2번째는 p 태그이므로 작동이 안됨 */
#test3 li:nth-child(2) {
  background: darkcyan;
}

#test3 li:nth-child(2n + 3) {
  background: silver;
}

/* even :짝수 */
/* odd : 홀수 */
#test3 li:nth-child(even) {
  color: yellow;
}
#test3 li:nth-child(odd) {
  color: palevioletred;
}

/* 해당 유형 중 n번째 요소 */
/* li 중 2번째 요소이기 때문에 nth-child(2)와는 달리 작동됨 */
#test3 li:nth-of-type(2) {
  color: aqua;
}

/* 뒤에서부터 n번째 요소 */
#test3 li:nth-last-child(5) {
  background: hotpink;
}

/* 뒤에서부터 해당 유형 중 n번째 요소 */
#test3 li:nth-last-of-type(3) {
  background: seagreen;
}

/* 12. 가상 요소 선택자 */
#test4 p::before {
  content: "앞";
  color: blue;
  background: yellow;
}

#test4 p::after {
  content: "뒤";
  color: white;
  background: black;
}
