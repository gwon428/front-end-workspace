.box-container {
  height: 50vh;
  border: 1px solid black;
}

#box-container1 {
  display: flex;
  justify-content: center;
  align-items: center;
}
.box {
  width: 200px;
  height: 200px;
  border: 2px solid black;
  background-color: rgba(184, 255, 230, 0.8);

  /* 글씨 때문! */
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;

  /* transition : 변화(transform)되기 전에 설정
    - 변환속성 애니메이션시간 */
  transition: transform 5s;
  transition: background-color 5s;
  transition: 5s linear; /*all은 생략 가능*/
}
.box:hover {
  background-color: rgba(255, 255, 189, 0.8);

  /* transform : 변형함수(); */
  /* scale : 지정한 크기만큼 확대/축소하는 함수 */
  transform: scale(0.5);
  /* lotate : 지정한 각도만큼 회전을 시키는 함수 */
  transform: rotate(45deg);
  /* skew : 지정한 각도만큼 비틀어 왜곡하는 함수 */
  transform: skew(10deg);
  transform: skewY(20deg);
  /* translate : x축, y축, z축 방향으로 이동시키는 함수 */
  transform: translateX(40px);
  transform: translateY(20px);
  transform: translate(100px, -100px);

  transform: scale(1.5) rotate(15deg);

  /* transform-origin : 변형의 기준점을 변경하는 속성 */
  transform-origin: left top;
  transform-origin: right top;
}

/* animation */
#box-container2 {
  width: 1200px;
  height: 600px;
}
.animation-box {
  box-sizing: border-box;
  width: 200px;
  height: 200px;
  border: 2px solid black;
  background: indigo;
  color: white;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  /* animation : name duration iteration-count timing-function delay direction
    - name : 설정된 keyframe 지정
    - duration : 실행 시간 지정
    - iteration-count : 반복 횟수 지정 (숫자/infinite)
    - timing-fundtion : 속도 형태 지정
    - delay : 대기 시간 지정
    - direction : 진행 형태 지정
  */
  animation: boxAni 5s linear;
  animation: boxAni 5s linear 3;
  animation: boxAni 5s linear infinite;
  animation: boxAni 5s linear infinite alternate; /*alternate : 진행형태*/
  animation: boxAni 5s linear infinite reverse;
  animation: boxAni 5s linear infinite alternate-reverse;
  animation: boxAni 5s linear forwards;
  animation: boxAni 5s linear infinite alternate;
}
.animation-box:hover {
  animation-play-state: paused;
  background-color: orangered;
}

/* 
@keyframs 애니메이션이름 {
  from {시작 프레임 설정}
  to {끝 프레임 설정}
  ** % {단위로 지정 가능} **
*/
@keyframes boxAni {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(1000px, 0);
  }
  100% {
    transform: translate(1000px, 400px);
  }
}

/* 3D */
#box-container3 {
  display: flex;
  justify-content: center;
  align-items: center;
}
#box-container3:hover .card {
  transform: rotateY(180deg);
}
.card {
  width: 200px;
  height: 200px;
  transform: rotateY(45deg);
  transform: perspective(400px) rotateY(45deg);
  transform: rotateY(0deg);
  transition: 3s;
  position: relative;
  transform-style: preserve-3d;
}
.card-item {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.card-item-front {
  background-image: url(/resources/blueberries.jpg);
  background-size: cover;
  background-position: center;
  z-index: 1;
  /* backface-visibility
  - 요소가 회전하여 뒷면이 보일 경우 표시 여부를 지정하는 속성
  */
  backface-visibility: hidden; /*default : visible*/
}
.card-item-back {
  background-color: skyblue;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  font-size: 2rem;
  color: white;
  transform: rotateY(180deg);
}
